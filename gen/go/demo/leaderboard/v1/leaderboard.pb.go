// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo/leaderboard/v1/leaderboard.proto

package leaderboardv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Represents the sort order for a leaderboard ranking.
type RankOrder int32

const (
	RankOrder_RANK_ORDER_INVALID RankOrder = 0
	// Ascending order (e.g. 1 -> 10).
	RankOrder_RANK_ORDER_ASC RankOrder = 1
	// Descending order (e.g. 10 -> 1).
	RankOrder_RANK_ORDER_DESC RankOrder = 2
)

var RankOrder_name = map[int32]string{
	0: "RANK_ORDER_INVALID",
	1: "RANK_ORDER_ASC",
	2: "RANK_ORDER_DESC",
}

var RankOrder_value = map[string]int32{
	"RANK_ORDER_INVALID": 0,
	"RANK_ORDER_ASC":     1,
	"RANK_ORDER_DESC":    2,
}

func (x RankOrder) String() string {
	return proto.EnumName(RankOrder_name, int32(x))
}

func (RankOrder) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_eaa68bf2df5a33e4, []int{0}
}

// The definition for a leaderboard.
type Leaderboard struct {
	// Unique identifier for the leaderboard.
	LeaderboardId string `protobuf:"bytes,1,opt,name=leaderboard_id,json=leaderboardId,proto3" json:"leaderboard_id,omitempty"`
	// Rank order of the leaderboard. (default: ASC)
	RankOrder RankOrder `protobuf:"varint,2,opt,name=rank_order,json=rankOrder,proto3,enum=demo.leaderboard.v1.RankOrder" json:"rank_order,omitempty"`
	// Max amount of scores a leaderboard can hold. (default: 10, min: 3, max: 100) fafsaf a
	MaxSize              *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Leaderboard) Reset()         { *m = Leaderboard{} }
func (m *Leaderboard) String() string { return proto.CompactTextString(m) }
func (*Leaderboard) ProtoMessage()    {}
func (*Leaderboard) Descriptor() ([]byte, []int) {
	return fileDescriptor_eaa68bf2df5a33e4, []int{0}
}

func (m *Leaderboard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Leaderboard.Unmarshal(m, b)
}
func (m *Leaderboard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Leaderboard.Marshal(b, m, deterministic)
}
func (m *Leaderboard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Leaderboard.Merge(m, src)
}
func (m *Leaderboard) XXX_Size() int {
	return xxx_messageInfo_Leaderboard.Size(m)
}
func (m *Leaderboard) XXX_DiscardUnknown() {
	xxx_messageInfo_Leaderboard.DiscardUnknown(m)
}

var xxx_messageInfo_Leaderboard proto.InternalMessageInfo

func (m *Leaderboard) GetLeaderboardId() string {
	if m != nil {
		return m.LeaderboardId
	}
	return ""
}

func (m *Leaderboard) GetRankOrder() RankOrder {
	if m != nil {
		return m.RankOrder
	}
	return RankOrder_RANK_ORDER_INVALID
}

func (m *Leaderboard) GetMaxSize() *wrappers.UInt32Value {
	if m != nil {
		return m.MaxSize
	}
	return nil
}

// A users score for a leaderboard.
type LeaderboardScore struct {
	// Unique identifier for the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Score the user achieved.
	Score                *wrappers.UInt32Value `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *LeaderboardScore) Reset()         { *m = LeaderboardScore{} }
func (m *LeaderboardScore) String() string { return proto.CompactTextString(m) }
func (*LeaderboardScore) ProtoMessage()    {}
func (*LeaderboardScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_eaa68bf2df5a33e4, []int{1}
}

func (m *LeaderboardScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderboardScore.Unmarshal(m, b)
}
func (m *LeaderboardScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderboardScore.Marshal(b, m, deterministic)
}
func (m *LeaderboardScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderboardScore.Merge(m, src)
}
func (m *LeaderboardScore) XXX_Size() int {
	return xxx_messageInfo_LeaderboardScore.Size(m)
}
func (m *LeaderboardScore) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderboardScore.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderboardScore proto.InternalMessageInfo

func (m *LeaderboardScore) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LeaderboardScore) GetScore() *wrappers.UInt32Value {
	if m != nil {
		return m.Score
	}
	return nil
}

func init() {
	proto.RegisterEnum("demo.leaderboard.v1.RankOrder", RankOrder_name, RankOrder_value)
	proto.RegisterType((*Leaderboard)(nil), "demo.leaderboard.v1.Leaderboard")
	proto.RegisterType((*LeaderboardScore)(nil), "demo.leaderboard.v1.LeaderboardScore")
}

func init() {
	proto.RegisterFile("demo/leaderboard/v1/leaderboard.proto", fileDescriptor_eaa68bf2df5a33e4)
}

var fileDescriptor_eaa68bf2df5a33e4 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xc1, 0x6a, 0xea, 0x40,
	0x14, 0x86, 0x6f, 0x22, 0x57, 0xaf, 0x47, 0xae, 0x0d, 0x23, 0x54, 0x29, 0x45, 0x44, 0x10, 0xa4,
	0x8b, 0x09, 0x89, 0x8b, 0xae, 0xba, 0x50, 0xe3, 0x22, 0x34, 0xa8, 0x4c, 0x68, 0x28, 0x45, 0x08,
	0xa3, 0x33, 0x15, 0xd1, 0x64, 0x64, 0xa2, 0x56, 0x7c, 0x9c, 0x2e, 0x4b, 0x9f, 0xa4, 0x4f, 0x55,
	0x62, 0xb0, 0xce, 0x42, 0xe8, 0x2e, 0xe7, 0xe7, 0xfb, 0x33, 0xdf, 0x39, 0xd0, 0x62, 0x3c, 0x12,
	0xe6, 0x8a, 0x53, 0xc6, 0xe5, 0x54, 0x50, 0xc9, 0xcc, 0x9d, 0xa5, 0x8e, 0x78, 0x2d, 0xc5, 0x46,
	0xa0, 0x4a, 0x8a, 0x61, 0x35, 0xdf, 0x59, 0x37, 0xf5, 0xb9, 0x10, 0xf3, 0x15, 0x37, 0x8f, 0xc8,
	0x74, 0xfb, 0x6a, 0xbe, 0x49, 0xba, 0x5e, 0x73, 0x99, 0x64, 0xa5, 0xe6, 0xa7, 0x06, 0x25, 0xef,
	0x5c, 0x41, 0x2d, 0x28, 0x2b, 0x7f, 0x08, 0x17, 0xac, 0xa6, 0x35, 0xb4, 0x76, 0x91, 0xfc, 0x57,
	0x52, 0x97, 0xa1, 0x07, 0x00, 0x49, 0xe3, 0x65, 0x28, 0x24, 0xe3, 0xb2, 0xa6, 0x37, 0xb4, 0x76,
	0xd9, 0xae, 0xe3, 0x0b, 0x02, 0x98, 0xd0, 0x78, 0x39, 0x4a, 0x29, 0x52, 0x94, 0xa7, 0x4f, 0x74,
	0x0f, 0xff, 0x22, 0xba, 0x0f, 0x93, 0xc5, 0x81, 0xd7, 0x72, 0x0d, 0xad, 0x5d, 0xb2, 0x6f, 0x71,
	0x26, 0x8a, 0x4f, 0xa2, 0xf8, 0xc9, 0x8d, 0x37, 0x1d, 0x3b, 0xa0, 0xab, 0x2d, 0x27, 0x85, 0x88,
	0xee, 0xfd, 0xc5, 0x81, 0x37, 0x43, 0x30, 0x14, 0x5b, 0x7f, 0x26, 0x24, 0x47, 0x55, 0x28, 0x6c,
	0x13, 0x2e, 0xcf, 0xae, 0xf9, 0x74, 0x74, 0x19, 0xb2, 0xe1, 0x6f, 0x92, 0x12, 0x47, 0xbf, 0xdf,
	0x9e, 0xc8, 0xd0, 0x3b, 0x0f, 0x8a, 0x3f, 0xc6, 0xe8, 0x1a, 0x10, 0xe9, 0x0e, 0x1f, 0xc3, 0x11,
	0x71, 0x06, 0x24, 0x74, 0x87, 0x41, 0xd7, 0x73, 0x1d, 0xe3, 0x0f, 0x42, 0x50, 0x56, 0xf2, 0xae,
	0xdf, 0x37, 0x34, 0x54, 0x81, 0x2b, 0x25, 0x73, 0x06, 0x7e, 0xdf, 0xd0, 0x7b, 0x31, 0x54, 0x67,
	0x22, 0xba, 0x74, 0x97, 0x9e, 0xba, 0xc7, 0x38, 0x15, 0x1a, 0x6b, 0x2f, 0xea, 0x91, 0x77, 0xd6,
	0xbb, 0x9e, 0x73, 0xbc, 0xe7, 0x0f, 0xbd, 0xe2, 0xa4, 0x75, 0x05, 0xc7, 0x81, 0xf5, 0x95, 0xa5,
	0x13, 0x25, 0x9d, 0x04, 0xd6, 0x34, 0x7f, 0x5c, 0xad, 0xf3, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xd9,
	0x5c, 0xe1, 0xc6, 0x32, 0x02, 0x00, 0x00,
}
