// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: demo/leaderboard/v1/leaderboard.proto

#include "demo/leaderboard/v1/leaderboard.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fwrappers_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto;
namespace demo {
namespace leaderboard {
namespace v1 {
class LeaderboardDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Leaderboard> _instance;
} _Leaderboard_default_instance_;
class LeaderboardScoreDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LeaderboardScore> _instance;
} _LeaderboardScore_default_instance_;
}  // namespace v1
}  // namespace leaderboard
}  // namespace demo
static void InitDefaultsscc_info_Leaderboard_demo_2fleaderboard_2fv1_2fleaderboard_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::leaderboard::v1::_Leaderboard_default_instance_;
    new (ptr) ::demo::leaderboard::v1::Leaderboard();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::leaderboard::v1::Leaderboard::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Leaderboard_demo_2fleaderboard_2fv1_2fleaderboard_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Leaderboard_demo_2fleaderboard_2fv1_2fleaderboard_2eproto}, {
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static void InitDefaultsscc_info_LeaderboardScore_demo_2fleaderboard_2fv1_2fleaderboard_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::demo::leaderboard::v1::_LeaderboardScore_default_instance_;
    new (ptr) ::demo::leaderboard::v1::LeaderboardScore();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::demo::leaderboard::v1::LeaderboardScore::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LeaderboardScore_demo_2fleaderboard_2fv1_2fleaderboard_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LeaderboardScore_demo_2fleaderboard_2fv1_2fleaderboard_2eproto}, {
      &scc_info_UInt32Value_google_2fprotobuf_2fwrappers_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_demo_2fleaderboard_2fv1_2fleaderboard_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_demo_2fleaderboard_2fv1_2fleaderboard_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_demo_2fleaderboard_2fv1_2fleaderboard_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_demo_2fleaderboard_2fv1_2fleaderboard_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::leaderboard::v1::Leaderboard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::leaderboard::v1::Leaderboard, leaderboard_id_),
  PROTOBUF_FIELD_OFFSET(::demo::leaderboard::v1::Leaderboard, rank_order_),
  PROTOBUF_FIELD_OFFSET(::demo::leaderboard::v1::Leaderboard, max_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::demo::leaderboard::v1::LeaderboardScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::demo::leaderboard::v1::LeaderboardScore, user_id_),
  PROTOBUF_FIELD_OFFSET(::demo::leaderboard::v1::LeaderboardScore, score_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::demo::leaderboard::v1::Leaderboard)},
  { 8, -1, sizeof(::demo::leaderboard::v1::LeaderboardScore)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::leaderboard::v1::_Leaderboard_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::demo::leaderboard::v1::_LeaderboardScore_default_instance_),
};

const char descriptor_table_protodef_demo_2fleaderboard_2fv1_2fleaderboard_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%demo/leaderboard/v1/leaderboard.proto\022"
  "\023demo.leaderboard.v1\032\036google/protobuf/wr"
  "appers.proto\"\211\001\n\013Leaderboard\022\026\n\016leaderbo"
  "ard_id\030\001 \001(\t\0222\n\nrank_order\030\002 \001(\0162\036.demo."
  "leaderboard.v1.RankOrder\022.\n\010max_size\030\003 \001"
  "(\0132\034.google.protobuf.UInt32Value\"P\n\020Lead"
  "erboardScore\022\017\n\007user_id\030\001 \001(\t\022+\n\005score\030\002"
  " \001(\0132\034.google.protobuf.UInt32Value*L\n\tRa"
  "nkOrder\022\026\n\022RANK_ORDER_INVALID\020\000\022\022\n\016RANK_"
  "ORDER_ASC\020\001\022\023\n\017RANK_ORDER_DESC\020\002Bn\n\027com."
  "demo.leaderboard.v1B\020LeaderboardProtoP\001Z"
  "\rleaderboardv1\242\002\003DLX\252\002\023Demo.Leaderboard."
  "V1\312\002\023Demo\\Leaderboard\\V1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_sccs[2] = {
  &scc_info_Leaderboard_demo_2fleaderboard_2fv1_2fleaderboard_2eproto.base,
  &scc_info_LeaderboardScore_demo_2fleaderboard_2fv1_2fleaderboard_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_once;
static bool descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto = {
  &descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_initialized, descriptor_table_protodef_demo_2fleaderboard_2fv1_2fleaderboard_2eproto, "demo/leaderboard/v1/leaderboard.proto", 512,
  &descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_once, descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_sccs, descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_demo_2fleaderboard_2fv1_2fleaderboard_2eproto::offsets,
  file_level_metadata_demo_2fleaderboard_2fv1_2fleaderboard_2eproto, 2, file_level_enum_descriptors_demo_2fleaderboard_2fv1_2fleaderboard_2eproto, file_level_service_descriptors_demo_2fleaderboard_2fv1_2fleaderboard_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_demo_2fleaderboard_2fv1_2fleaderboard_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto), true);
namespace demo {
namespace leaderboard {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RankOrder_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_demo_2fleaderboard_2fv1_2fleaderboard_2eproto);
  return file_level_enum_descriptors_demo_2fleaderboard_2fv1_2fleaderboard_2eproto[0];
}
bool RankOrder_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Leaderboard::InitAsDefaultInstance() {
  ::demo::leaderboard::v1::_Leaderboard_default_instance_._instance.get_mutable()->max_size_ = const_cast< PROTOBUF_NAMESPACE_ID::UInt32Value*>(
      PROTOBUF_NAMESPACE_ID::UInt32Value::internal_default_instance());
}
class Leaderboard::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::UInt32Value& max_size(const Leaderboard* msg);
};

const PROTOBUF_NAMESPACE_ID::UInt32Value&
Leaderboard::_Internal::max_size(const Leaderboard* msg) {
  return *msg->max_size_;
}
void Leaderboard::clear_max_size() {
  if (GetArenaNoVirtual() == nullptr && max_size_ != nullptr) {
    delete max_size_;
  }
  max_size_ = nullptr;
}
Leaderboard::Leaderboard()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:demo.leaderboard.v1.Leaderboard)
}
Leaderboard::Leaderboard(const Leaderboard& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  leaderboard_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_leaderboard_id().empty()) {
    leaderboard_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.leaderboard_id_);
  }
  if (from._internal_has_max_size()) {
    max_size_ = new PROTOBUF_NAMESPACE_ID::UInt32Value(*from.max_size_);
  } else {
    max_size_ = nullptr;
  }
  rank_order_ = from.rank_order_;
  // @@protoc_insertion_point(copy_constructor:demo.leaderboard.v1.Leaderboard)
}

void Leaderboard::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Leaderboard_demo_2fleaderboard_2fv1_2fleaderboard_2eproto.base);
  leaderboard_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rank_order_) -
      reinterpret_cast<char*>(&max_size_)) + sizeof(rank_order_));
}

Leaderboard::~Leaderboard() {
  // @@protoc_insertion_point(destructor:demo.leaderboard.v1.Leaderboard)
  SharedDtor();
}

void Leaderboard::SharedDtor() {
  leaderboard_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete max_size_;
}

void Leaderboard::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Leaderboard& Leaderboard::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Leaderboard_demo_2fleaderboard_2fv1_2fleaderboard_2eproto.base);
  return *internal_default_instance();
}


void Leaderboard::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.leaderboard.v1.Leaderboard)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leaderboard_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && max_size_ != nullptr) {
    delete max_size_;
  }
  max_size_ = nullptr;
  rank_order_ = 0;
  _internal_metadata_.Clear();
}

const char* Leaderboard::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string leaderboard_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_leaderboard_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "demo.leaderboard.v1.Leaderboard.leaderboard_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .demo.leaderboard.v1.RankOrder rank_order = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_rank_order(static_cast<::demo::leaderboard::v1::RankOrder>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt32Value max_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_max_size(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Leaderboard::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.leaderboard.v1.Leaderboard)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string leaderboard_id = 1;
  if (this->leaderboard_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_leaderboard_id().data(), static_cast<int>(this->_internal_leaderboard_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "demo.leaderboard.v1.Leaderboard.leaderboard_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_leaderboard_id(), target);
  }

  // .demo.leaderboard.v1.RankOrder rank_order = 2;
  if (this->rank_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_rank_order(), target);
  }

  // .google.protobuf.UInt32Value max_size = 3;
  if (this->has_max_size()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::max_size(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.leaderboard.v1.Leaderboard)
  return target;
}

size_t Leaderboard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.leaderboard.v1.Leaderboard)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string leaderboard_id = 1;
  if (this->leaderboard_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_leaderboard_id());
  }

  // .google.protobuf.UInt32Value max_size = 3;
  if (this->has_max_size()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *max_size_);
  }

  // .demo.leaderboard.v1.RankOrder rank_order = 2;
  if (this->rank_order() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rank_order());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Leaderboard::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.leaderboard.v1.Leaderboard)
  GOOGLE_DCHECK_NE(&from, this);
  const Leaderboard* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Leaderboard>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.leaderboard.v1.Leaderboard)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.leaderboard.v1.Leaderboard)
    MergeFrom(*source);
  }
}

void Leaderboard::MergeFrom(const Leaderboard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.leaderboard.v1.Leaderboard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.leaderboard_id().size() > 0) {

    leaderboard_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.leaderboard_id_);
  }
  if (from.has_max_size()) {
    _internal_mutable_max_size()->PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(from._internal_max_size());
  }
  if (from.rank_order() != 0) {
    _internal_set_rank_order(from._internal_rank_order());
  }
}

void Leaderboard::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.leaderboard.v1.Leaderboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Leaderboard::CopyFrom(const Leaderboard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.leaderboard.v1.Leaderboard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Leaderboard::IsInitialized() const {
  return true;
}

void Leaderboard::InternalSwap(Leaderboard* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  leaderboard_id_.Swap(&other->leaderboard_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_size_, other->max_size_);
  swap(rank_order_, other->rank_order_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Leaderboard::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LeaderboardScore::InitAsDefaultInstance() {
  ::demo::leaderboard::v1::_LeaderboardScore_default_instance_._instance.get_mutable()->score_ = const_cast< PROTOBUF_NAMESPACE_ID::UInt32Value*>(
      PROTOBUF_NAMESPACE_ID::UInt32Value::internal_default_instance());
}
class LeaderboardScore::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::UInt32Value& score(const LeaderboardScore* msg);
};

const PROTOBUF_NAMESPACE_ID::UInt32Value&
LeaderboardScore::_Internal::score(const LeaderboardScore* msg) {
  return *msg->score_;
}
void LeaderboardScore::clear_score() {
  if (GetArenaNoVirtual() == nullptr && score_ != nullptr) {
    delete score_;
  }
  score_ = nullptr;
}
LeaderboardScore::LeaderboardScore()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:demo.leaderboard.v1.LeaderboardScore)
}
LeaderboardScore::LeaderboardScore(const LeaderboardScore& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_id().empty()) {
    user_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from._internal_has_score()) {
    score_ = new PROTOBUF_NAMESPACE_ID::UInt32Value(*from.score_);
  } else {
    score_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:demo.leaderboard.v1.LeaderboardScore)
}

void LeaderboardScore::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LeaderboardScore_demo_2fleaderboard_2fv1_2fleaderboard_2eproto.base);
  user_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  score_ = nullptr;
}

LeaderboardScore::~LeaderboardScore() {
  // @@protoc_insertion_point(destructor:demo.leaderboard.v1.LeaderboardScore)
  SharedDtor();
}

void LeaderboardScore::SharedDtor() {
  user_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete score_;
}

void LeaderboardScore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LeaderboardScore& LeaderboardScore::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LeaderboardScore_demo_2fleaderboard_2fv1_2fleaderboard_2eproto.base);
  return *internal_default_instance();
}


void LeaderboardScore::Clear() {
// @@protoc_insertion_point(message_clear_start:demo.leaderboard.v1.LeaderboardScore)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && score_ != nullptr) {
    delete score_;
  }
  score_ = nullptr;
  _internal_metadata_.Clear();
}

const char* LeaderboardScore::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "demo.leaderboard.v1.LeaderboardScore.user_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.UInt32Value score = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_score(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LeaderboardScore::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:demo.leaderboard.v1.LeaderboardScore)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "demo.leaderboard.v1.LeaderboardScore.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // .google.protobuf.UInt32Value score = 2;
  if (this->has_score()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::score(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:demo.leaderboard.v1.LeaderboardScore)
  return target;
}

size_t LeaderboardScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:demo.leaderboard.v1.LeaderboardScore)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // .google.protobuf.UInt32Value score = 2;
  if (this->has_score()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *score_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeaderboardScore::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:demo.leaderboard.v1.LeaderboardScore)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaderboardScore* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LeaderboardScore>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:demo.leaderboard.v1.LeaderboardScore)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:demo.leaderboard.v1.LeaderboardScore)
    MergeFrom(*source);
  }
}

void LeaderboardScore::MergeFrom(const LeaderboardScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:demo.leaderboard.v1.LeaderboardScore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.has_score()) {
    _internal_mutable_score()->PROTOBUF_NAMESPACE_ID::UInt32Value::MergeFrom(from._internal_score());
  }
}

void LeaderboardScore::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:demo.leaderboard.v1.LeaderboardScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaderboardScore::CopyFrom(const LeaderboardScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:demo.leaderboard.v1.LeaderboardScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaderboardScore::IsInitialized() const {
  return true;
}

void LeaderboardScore::InternalSwap(LeaderboardScore* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_id_.Swap(&other->user_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(score_, other->score_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LeaderboardScore::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace leaderboard
}  // namespace demo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::demo::leaderboard::v1::Leaderboard* Arena::CreateMaybeMessage< ::demo::leaderboard::v1::Leaderboard >(Arena* arena) {
  return Arena::CreateInternal< ::demo::leaderboard::v1::Leaderboard >(arena);
}
template<> PROTOBUF_NOINLINE ::demo::leaderboard::v1::LeaderboardScore* Arena::CreateMaybeMessage< ::demo::leaderboard::v1::LeaderboardScore >(Arena* arena) {
  return Arena::CreateInternal< ::demo::leaderboard::v1::LeaderboardScore >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
